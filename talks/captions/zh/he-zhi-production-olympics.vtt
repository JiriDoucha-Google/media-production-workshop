WEBVTT

1
00:05.700 --> 00:06.700
大家好

2
00:06.700 --> 00:06.710
我是何智

3
00:07.700 --> 00:12.700
来自中国移动咪咕公司，是web媒体制作团队的负责人

Slide-2
00:12.700 --> 00:22.700
今天，我想与大家分享咪咕在体育直播和后期制作中使用的web编辑技术

Slide-3
00:23.700 --> 00:26.700
在2020年欧洲杯

6.
00:26.700 --> 00:28.700
和东京2020奥运会

7.
00:28.700 --> 00:35.700
基于web技术大多数用于现场和后期制作

8.
00:35.700 --> 00:40.700
应用工具主要分为三类：

9
00:40.700 --> 00:43.700
直播和流媒体

10
00:43.700 --> 00:45.700
后期制作和编辑

11
00:45.700 --> 00:47.700
AI提高了制作效率

12-p
00:48.700 --> 00:54.700
这些工具是基于HTML5和ffmpeg技术实现的

13
00:55.700 --> 00:59.700
下面表格列出了使用的协议和技术

slide-4
01:01.700 --> 01:07.700
那么，让我们看看直播编辑工具。最擅长的功能是广播和发布

15
01:08.700 --> 01:12.700
为了在30秒内制作和发布视频

16
01:13.700 --> 01:15.700
我们已经做了很多改进

17-p
01:16.700 --> 01:22.700
首先，使用ffmpeg将直播流统一编码为HLS

18 
01:22.700 --> 01:26.700
并在2秒内对每个ts文件进行分割

19
01:26.700 --> 01:35.700
第二种是快速压缩720p低比特率，用于网页浏览和编辑

20
01:36.700 --> 01:38.700
第三，提供关键帧图片

21
01:39.700 --> 01:46.700
通过DOM在操作上显示，便于截取和定位

22
01:46.700 --> 01:55.700
第四，添加video.js播放对象，去快速浏览内容，在去掉模拟广播后

23
01:56.700 --> 02:04.700
第五，使用后台服务去同时处理，以提高性能

24
02:04.700 --> 02:06.700
第六，使用CDN缓存

25-p
02:07.700 --> 02:11.700
还有一个一直存在的问题

26
02:12.700 --> 02:16.700
有两个播放窗口，播放两个的 video.js 对象

27
02:16.700 --> 02:19.700
两者都需要下载 m3u8 文件

28
02:20.700 --> 02:24.700
我们希望他们能够共享数据，避免重复

29
02:24.700 --> 02:27.700
下载并节省网络带宽

30
02:27.700 --> 02:35.700
这样，我们可以打开更多的窗口，同时预览不同时间的内容

slide-5
02:36.700 --> 02:38.700
然后，让我们转到后期编辑

32
02:38.700 --> 02:43.700
它可以被视为一个实时编辑工具的升级

33
02:44.700 --> 02:47.700
在这里，我们追求的不再是时效性，而是专业性

34-p
02:48.700 --> 02:56.700
我们需要通过复杂的多视频对象，控制不同类型的内容，在canvas上 显示它们

35
02:57.700 --> 03:01.700
这里的难点在于处理性能和效率

36
03:02.700 --> 03:03.700
如何做到这一点

37-p
03:04.700 --> 03:06.700
首先，对于整个架构

38
03:06.700 --> 03:14.700
它采用 WebGL 模拟，通过媒体服务进行最终处理，减少 web 负载

39
03:14.700 --> 03:23.700
其次，我们尝试将显示内容的窗口分辨率控制在480*270

40
03:24.700 --> 03:34.700
这是因为 WebGL 渲染高分辨率特效处理，需要占用普通笔记本电脑80%的CPU

41
03:35.700 --> 03:40.700
第三，为了通过鼠标移动不延迟地预览内容

42
03:40.700 --> 03:45.700
在上传过程中，我们使用ffmpeg将内容重新编码为HLS

43
03:46.700 --> 03:47.700
最后，还有一些操作优化点

44
03:47.700 --> 04:01.700
例如提供一个小的H5编辑窗口，供用户在上传时预处理和剪切所需内容

45-p
04:01.700 --> 04:05.700
我们已经试着使用 Webcodecs 来实现

46
04:05.700 --> 04:11.700
它是非常方便，但需要逐帧处理

47
04:12.700 --> 04:16.700
不得不说，对定位和剪辑内容来说，不是很友好

48
04:17.700 --> 04:21.700
最简单的方法是使用 ffmpeg 进行 WebAssembly

49
04:22.700 --> 04:27.700
我们希望 WebCodecs 能够支持更多这样的功能

slide-6
04:29.700 --> 04:32.700
那么, 为了满足不同的编辑需要

51
04:32.700 --> 04:36.700
我们还开发了一系列工具

52
04:37.700 --> 04:40.700
包括图像编辑、封面制作、字幕制作

53
04:40.700 --> 04:49.700
视频模板、横屏到竖屏、去除水印工具，等等

54
04:50.700 --> 04:53.700
由于 web 框架和模块化设计

55
04:53.700 --> 04:57.700
使得大多数基本功能可重复使用

56
04:57.700 --> 05:03.700
而且它可以很容易地实现增量功能

slide-7
05:03.700 --> 05:09.700
整体上，我们选择了前轻后重的 W/S 架构

58
05:09.700 --> 05:12.700
这主要有三个原因

59
05:14.700 --> 05:16.700
首先，有上面提到的性能问题

60
05:17.700 --> 05:24.700
其次，为了灵活性，light front 可以很容易地集成到商业应用中

61
05:25.700 --> 05:27.700
第三是兼容性

62
05:28.700 --> 05:33.700
后台服务可以为云上的各种终端提供API

63
05:34.700 --> 05:43.700
是的，我们可以实现快速的业务集成、强大的可重用性和易于扩展

slide-8
05:43.700 --> 05:46.700
为了以低成本生产更多内容

65
05:47.700 --> 05:51.700
我们增加了 AI 功能，比如自动添加标签

66
05:51.700 --> 05:56.700
自动添加字幕，自动删除水印

67
05:56.700 --> 06:03.700
自动将横屏转到竖屏，自动剪切视频，等等

slide-9
06:04.700 --> 06:12.700
最后，让我们回顾一下，我们为什么选择 web 编辑技术作为线上操作和制作平台

69-p
06:13.700 --> 06:17.700
以一家拥有200名员工的媒体公司为例

70
06:17.700 --> 06:21.700
首先是版权的需要。通过 web 编辑

71
06:21.700 --> 06:26.700
我们可以将内容复制、下载和泄露的风险降至最低

72
06:27.700 --> 06:35.700
第二是操作的需要。用户可以通过在线修改节省大量时间

73
06:35.700 --> 06:37.700
并重新提交内容进行操作

74
06:37.700 --> 06:41.700
第三是研发需要。如上所述，为了获得更好的性能

75
06:42.700 --> 06:50.700
灵活性和兼容性。第四，成本需要。与购买 workstations 相比

76
06:50.700 --> 06:55.700
使用共享云服务器，web 编辑可以节省80%以上的成本

77
06:56.700 --> 07:03.700
第五，构建和成熟周期较短，可节省70%的时间

78-p
07:04.700 --> 07:12.700
线上操作和制作平台可用于生产和制作大量音乐

79
07:12.700 --> 07:20.700
视频、电影和直播，并在内容制作系统中扮演着一个核心角色

slide-10
07:21.700 --> 07:23.700
我们满怀期待

81
07:24.700 --> 07:29.700
我们希望 WebCodecs 能够提供更多的功能和API

82
07:30.700 --> 07:33.700
例如，支持 video.js 对象共享数据

83
07:34.700 --> 07:42.700
支持定位、切分视频，支持低CPU消耗的高分辨率特效渲染

84
07:42.700 --> 07:49.700
支持 RMVB/AVI/MKV 等常用网络视频格式
 
85
07:49.700 --> 07:59.700
并支持未来超高清 4K/8K 视频的h265/VP9 编解码

slide-11
08:00.700 --> 08:01.700
谢谢大家