WEBVTT

1
00:06.500 --> 00:06.883
<v ->大家好</v>

2
00:06.883 --> 00:07.770 line:15%
我是Patrick，

3
00:07.770 --> 00:09.360 line:15%
微软的一名项目经理

4
00:09.360 --> 00:13.200 line:15%
今天想和大家聊聊 EyeDropper API

5-p
00:13.200 --> 00:15.710
大家都知道色彩采样，

6
00:15.710 --> 00:17.750
有创意的应用程序是很实用的

7
00:17.750 --> 00:20.300
比如，当你用PowerPoint之类的应用

8
00:20.300 --> 00:21.480
你想改变物体轮廓的颜色

9
00:21.480 --> 00:22.860
你想改变物体轮廓的颜色

10
00:22.860 --> 00:24.810
你就可以使用滴管工具

11
00:24.810 --> 00:27.550
从另一个对象上抓取该颜色

12
00:27.550 --> 00:31.490
这样你就不必记住它是什么颜色，

13
00:31.490 --> 00:34.800
也不必记住色值。

14-p
00:34.800 --> 00:37.380
浏览器中的开发工具也提供这一功能

15
00:37.380 --> 00:39.188
如果你想在开发工具的

16
00:39.188 --> 00:41.789
样式面板中更改颜色属性，

17
00:41.789 --> 00:44.300
通常会有一个滴管图标，

18
00:44.300 --> 00:47.760
允许您点击网页的某部分

20
00:47.760 --> 00:49.630
这样就可以恰当地抓取颜色

21
00:49.630 --> 00:53.457
不需要记住十六进制代码

23-p
00:53.457 --> 00:57.850
例如Photoshop以及这类的应用程序

24
00:57.850 --> 00:59.700
可以直接从艺术品中抓取颜色

25
00:59.700 --> 01:02.700
可以直接从艺术品中抓取颜色

26-p
01:02.700 --> 01:04.750
不过，在网页上实现不了

27
01:04.750 --> 01:07.199
因此，如果你正在开发一个创造性的应用程序，

28
01:07.199 --> 01:10.260
由于现在的web技术限制，这个功能实现不了

29-p
01:10.260 --> 01:13.300
你可以在Chromium浏览器上实现这一点

30
01:13.300 --> 01:15.878
如果你在Chromium浏览器中输入某颜色元素，

31
01:15.878 --> 01:19.400
一旦您单击该元素，																				
32
01:19.400 --> 01:21.350
就会有一个下拉列表，其中包含

33
01:21.350 --> 01:23.750
一个允许你执行此操作的滴管图标。

34-p
01:23.750 --> 01:25.240
但此功能还没有被标准化。

35
01:26.130 --> 01:28.440
实现效果也与Firefox中不同

36
01:28.440 --> 01:30.309
Firefox里有特殊的

37
01:30.309 --> 01:35.309
或默认颜色选择器调色板。

38-p
01:36.280 --> 01:41.160
此外，input type=color很难用CSS来设置样式，

39
01:41.160 --> 01:43.900
而且它是一个你可能不想添加到标记中的

40
01:43.900 --> 01:46.290                                                                                                                                                          
额外的HTML标签

41
01:46.290 --> 01:48.230
如果你能直接从JavaScript调用该功能会更好

42
01:48.230 --> 01:50.700
如果你能直接从JavaScript调用该功能会更好

43-p
01:50.700 --> 01:53.310
这也是我们创建EyeDropper API的原因

44
01:53.310 --> 01:54.363
这是一个全新的API

45
01:54.363 --> 01:59.363
它现在是Web孵化社区群组（WICG）技术草案

46
01:59.410 --> 02:01.580
它已经通过了W3C TAG审阅

47
02:02.600 --> 02:06.638
是由微软Edge的工程师

48
02:06.638 --> 02:09.380
在Chromium开源项目中实现的,

49
02:09.380 --> 02:12.170
因此目前任何基于Chromium的浏览器都可以使用它

50
02:12.170 --> 02:13.320
因此目前任何基于Chromium的浏览器都可以使用它

51
02:13.320 --> 02:15.210
这也是在与谷歌Chrome的密切合作下完成的

52
02:15.210 --> 02:17.630
这也是在与谷歌Chrome的密切合作下完成的

53-p
02:17.630 --> 02:19.540
让我们看看这个功能是什么样子的

54
02:19.540 --> 02:22.350
让我们看看这个功能是什么样子的

55
02:22.350 --> 02:24.990
我玩过一个无聊的游戏

56
02:24.990 --> 02:28.240
要用滴管（EyeDropper）

57
02:28.240 --> 02:31.790
在底部找到与顶部的小正方形相匹配的颜色，

58
02:31.790 --> 02:33.300
在底部找到与顶部的小正方形相匹配的颜色，

59
02:33.300 --> 02:34.760
也许你能成功找到正确的颜色

60
02:34.760 --> 02:37.200
也许不能

61
02:37.200 --> 02:41.610
如果你用时超过10秒，

62
02:41.610 --> 02:45.400
就会回到正常的光标

63
02:45.400 --> 02:46.743
这轮游戏就失败了。

64-p
02:48.270 --> 02:49.760
下面是另一个示例

65
02:49.760 --> 02:54.760
它是一种交换颜色的应用程序

66
02:55.300 --> 02:57.540
你可以在画布中加载图像，

67
02:57.540 --> 02:59.880
然后单击第一个按钮，

68
02:59.880 --> 03:02.460
从图像中采样该颜色。

69
03:02.460 --> 03:04.140
我们选择这一颜色，

70
03:04.140 --> 03:05.740
然后点击下一个按钮，

71
03:05.740 --> 03:08.530
用你从其他地方采样的另一个颜色，

72
03:08.530 --> 03:10.300
替换这个颜色。

73-p
03:11.330 --> 03:12.890
还有第三个示例

74
03:12.890 --> 03:16.520
这是一种随机蒙德里安艺术生成器，

75
03:16.520 --> 03:20.270
你可以通过单击该生成器，

76
03:20.270 --> 03:22.823
将某块的颜色更改为你想要的任何其他颜色。

77-p
03:24.500 --> 03:25.670
现在我们看一下

78
03:25.670 --> 03:27.280
这些示例的代码。

79
03:27.280 --> 03:31.250
我将使用上面演示的游戏中的代码

80
03:31.250 --> 03:32.450
因为它使用了

81
03:32.450 --> 03:35.100
API的大部分功能

82-p
03:35.100 --> 03:39.530
EyeDropper API的核心是EyeDropper类。

83
03:39.530 --> 03:42.182
如果你想使用EyeDropper，要根据初始化类,

84
03:42.182 --> 03:46.690
获取对象，并调用对象的open方法。

85-p
03:46.690 --> 03:47.960
如果调用open方法，

86
03:47.960 --> 03:50.630
滴管会立即打开，

87
03:50.630 --> 03:54.420
用户可以从整个屏幕中选择颜色。

88
03:54.420 --> 03:56.100
该方法会返回一个Promise，

89
03:56.100 --> 03:58.627
最终reject 或resolve

90
03:58.627 --> 04:01.477
例如，当用户按下键盘上的escape（退出）按钮

91
04:01.477 --> 04:04.630
退出滴管模式时，它会reject 。

92
04:04.630 --> 04:06.200
退出滴管模式时，它会reject 。

93
04:06.200 --> 04:09.470
当用户单击屏幕上的像素时，

94
04:09.470 --> 04:11.920
当用户单击屏幕上的像素时，

95
04:11.920 --> 04:16.930
它将resolve 并返回色值。

96
04:17.520 --> 04:20.710
还有一种方法可以中止EyeDropper 模式。

97-p
04:20.710 --> 04:23.412
如果应用程序在任何时候更改状态，

98
04:23.412 --> 04:26.454
需要停止使用滴管，

99
04:26.454 --> 04:30.450
你可以向滴管发送中止信号，

100
04:30.450 --> 04:35.450
将其作为可选参数传递给open 方法，

101
04:35.610 --> 04:38.703
然后就会退出滴管模式。

102-p
04:40.680 --> 04:43.550
这就是API的全部内容。

103
04:43.550 --> 04:45.972
目前只是一个简单的API（应用程序接口）。

104
04:45.972 --> 04:49.380
只能执行一个任务但完成得很好。

105-p
04:49.380 --> 04:53.240
现在有些关于安全和隐私方面的问题

106
04:53.240 --> 04:57.480
如果任何网站都能收集屏幕上像素的颜色，

107
04:57.480 --> 05:00.490
这是个问题。

108
05:00.490 --> 05:02.400
如果他们同时能追踪我鼠标坐标，

109
05:02.400 --> 05:03.800
如果他们同时能追踪我鼠标坐标，

110
05:03.800 --> 05:06.480
那就会泄露敏感信息。

111
05:06.480 --> 05:09.280
那就会泄露敏感信息。

112-p
05:09.280 --> 05:13.920
但API通过以下方式解决了这些问题。

113
05:13.920 --> 05:14.980
首先

114
05:14.980 --> 05:19.960
你不能在用户操作之外使用open方法。

115
05:19.960 --> 05:21.330
需要有用户意图。

116
05:21.330 --> 05:24.260
例如，为了响应用户的单击

117
05:24.260 --> 05:25.923
你可以使用open方法。

118
05:27.550 --> 05:30.150
同样，一旦调用了open 方法，

119
05:30.150 --> 05:32.960
浏览器会以非常非常明显的方式显示滴管模式，

120
05:32.960 --> 05:35.500
浏览器会以非常非常明显的方式显示滴管模式，

121
05:35.500 --> 05:39.990
这就是为什么你会看到有放大镜出现。

122
05:39.990 --> 05:41.590
这样用户可以明显看到这一情况，

123
05:41.590 --> 05:42.630
这样用户可以明显看到这一情况，

124
05:42.630 --> 05:47.390
那不是通常出现的正常光标

125-p
05:47.390 --> 05:51.570
其次，当用户移动鼠标时，

126
05:51.570 --> 05:55.680
API无法从任何像素收集到颜色。

127
05:55.680 --> 05:58.100
必须再次有用户意图，

128
05:58.100 --> 06:00.690
通常是单击像素，

129
06:00.690 --> 06:02.100
此时就可以获取颜色，

130
06:02.100 --> 06:04.800
否则无法获取。

131-p
06:04.800 --> 06:04.913
最后
132
06:04.913 --> 06:07.180
用户可以控制整个体验，

133
06:07.180 --> 06:09.690
他们仍然可以使用键盘上的escape键

134
06:09.690 --> 06:12.470
退出滴管模式。

135-p
06:12.470 --> 06:13.920
API就是这样。

136
06:13.920 --> 06:15.600
我们希望得到您的反馈，

137
06:15.600 --> 06:17.960
特别是您是否认为API应该进一步扩展？

138
06:17.960 --> 06:19.820
特别是您是否认为API应该进一步扩展？

139
06:19.820 --> 06:22.330
对于类似应用，

140
06:22.330 --> 06:23.260
您是否还考虑了其他功能？

141
06:23.260 --> 06:25.670
例如，多重颜色选择

142
06:25.670 --> 06:29.700
获取屏幕坐标等等？

143-p
06:29.700 --> 06:32.850
我会留下相应技术文档、演示的链接，

144
06:32.850 --> 06:35.470
以及填写反馈信息的地址。

145
06:35.470 --> 06:38.143
谢谢您抽出宝贵时间，生活愉快！
